
tmp/itoa.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <itoa>:
   0:	83 fa 10             	cmp    edx,0x10
   3:	49 89 f1             	mov    r9,rsi
   6:	74 78                	je     80 <itoa+0x80>
   8:	85 ff                	test   edi,edi
   a:	0f 84 a8 00 00 00    	je     b8 <itoa+0xb8>
  10:	81 ff 00 00 00 80    	cmp    edi,0x80000000
  16:	0f 84 cc 00 00 00    	je     e8 <itoa+0xe8>
  1c:	85 ff                	test   edi,edi
  1e:	0f 88 b4 00 00 00    	js     d8 <itoa+0xd8>
  24:	45 31 c0             	xor    r8d,r8d
  27:	49 63 c8             	movsxd rcx,r8d
  2a:	be 67 66 66 66       	mov    esi,0x66666667
  2f:	4c 01 c9             	add    rcx,r9
  32:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
  38:	89 f8                	mov    eax,edi
  3a:	41 83 c0 01          	add    r8d,0x1
  3e:	f7 ee                	imul   esi
  40:	89 f8                	mov    eax,edi
  42:	c1 f8 1f             	sar    eax,0x1f
  45:	c1 fa 02             	sar    edx,0x2
  48:	29 c2                	sub    edx,eax
  4a:	8d 04 92             	lea    eax,[rdx+rdx*4]
  4d:	01 c0                	add    eax,eax
  4f:	29 c7                	sub    edi,eax
  51:	8d 47 30             	lea    eax,[rdi+0x30]
  54:	89 d7                	mov    edi,edx
  56:	88 01                	mov    BYTE PTR [rcx],al
  58:	48 83 c1 01          	add    rcx,0x1
  5c:	85 d2                	test   edx,edx
  5e:	75 d8                	jne    38 <itoa+0x38>
  60:	4d 63 c0             	movsxd r8,r8d
  63:	43 c6 04 01 00       	mov    BYTE PTR [r9+r8*1],0x0
  68:	41 80 39 2d          	cmp    BYTE PTR [r9],0x2d
  6c:	74 5a                	je     c8 <itoa+0xc8>
  6e:	4c 89 cf             	mov    rdi,r9
  71:	e9 00 00 00 00       	jmp    76 <itoa+0x76>
  76:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  7d:	00 00 00 
  80:	85 ff                	test   edi,edi
  82:	89 f8                	mov    eax,edi
  84:	74 32                	je     b8 <itoa+0xb8>
  86:	48 89 f2             	mov    rdx,rsi
  89:	45 31 c0             	xor    r8d,r8d
  8c:	eb 16                	jmp    a4 <itoa+0xa4>
  8e:	66 90                	xchg   ax,ax
  90:	83 c1 30             	add    ecx,0x30
  93:	88 0a                	mov    BYTE PTR [rdx],cl
  95:	c1 e8 04             	shr    eax,0x4
  98:	41 83 c0 01          	add    r8d,0x1
  9c:	48 83 c2 01          	add    rdx,0x1
  a0:	85 c0                	test   eax,eax
  a2:	74 bc                	je     60 <itoa+0x60>
  a4:	89 c1                	mov    ecx,eax
  a6:	83 e1 0f             	and    ecx,0xf
  a9:	83 f9 09             	cmp    ecx,0x9
  ac:	76 e2                	jbe    90 <itoa+0x90>
  ae:	83 c1 57             	add    ecx,0x57
  b1:	88 0a                	mov    BYTE PTR [rdx],cl
  b3:	eb e0                	jmp    95 <itoa+0x95>
  b5:	0f 1f 00             	nop    DWORD PTR [rax]
  b8:	be 00 00 00 00       	mov    esi,0x0
  bd:	4c 89 cf             	mov    rdi,r9
  c0:	e9 00 00 00 00       	jmp    c5 <itoa+0xc5>
  c5:	0f 1f 00             	nop    DWORD PTR [rax]
  c8:	49 8d 79 01          	lea    rdi,[r9+0x1]
  cc:	e9 00 00 00 00       	jmp    d1 <itoa+0xd1>
  d1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
  d8:	c6 06 2d             	mov    BYTE PTR [rsi],0x2d
  db:	f7 df                	neg    edi
  dd:	41 b8 01 00 00 00    	mov    r8d,0x1
  e3:	e9 3f ff ff ff       	jmp    27 <itoa+0x27>
  e8:	be 00 00 00 00       	mov    esi,0x0
  ed:	4c 89 cf             	mov    rdi,r9
  f0:	e9 00 00 00 00       	jmp    f5 <itoa+0xf5>
  f5:	66 66 2e 0f 1f 84 00 	data32 nop WORD PTR cs:[rax+rax*1+0x0]
  fc:	00 00 00 00 

0000000000000100 <DecimalToString>:
 100:	85 ff                	test   edi,edi
 102:	49 89 f2             	mov    r10,rsi
 105:	74 69                	je     170 <DecimalToString+0x70>
 107:	81 ff 00 00 00 80    	cmp    edi,0x80000000
 10d:	0f 84 86 00 00 00    	je     199 <DecimalToString+0x99>
 113:	85 ff                	test   edi,edi
 115:	78 69                	js     180 <DecimalToString+0x80>
 117:	45 31 c0             	xor    r8d,r8d
 11a:	49 63 c8             	movsxd rcx,r8d
 11d:	41 b9 67 66 66 66    	mov    r9d,0x66666667
 123:	4c 01 d1             	add    rcx,r10
 126:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 12d:	00 00 00 
 130:	89 f8                	mov    eax,edi
 132:	41 83 c0 01          	add    r8d,0x1
 136:	41 f7 e9             	imul   r9d
 139:	89 f8                	mov    eax,edi
 13b:	c1 f8 1f             	sar    eax,0x1f
 13e:	c1 fa 02             	sar    edx,0x2
 141:	29 c2                	sub    edx,eax
 143:	8d 04 92             	lea    eax,[rdx+rdx*4]
 146:	01 c0                	add    eax,eax
 148:	29 c7                	sub    edi,eax
 14a:	8d 47 30             	lea    eax,[rdi+0x30]
 14d:	89 d7                	mov    edi,edx
 14f:	88 01                	mov    BYTE PTR [rcx],al
 151:	48 83 c1 01          	add    rcx,0x1
 155:	85 d2                	test   edx,edx
 157:	75 d7                	jne    130 <DecimalToString+0x30>
 159:	4d 63 c0             	movsxd r8,r8d
 15c:	43 c6 04 02 00       	mov    BYTE PTR [r10+r8*1],0x0
 161:	41 80 3a 2d          	cmp    BYTE PTR [r10],0x2d
 165:	74 29                	je     190 <DecimalToString+0x90>
 167:	4c 89 d7             	mov    rdi,r10
 16a:	e9 00 00 00 00       	jmp    16f <DecimalToString+0x6f>
 16f:	90                   	nop
 170:	be 00 00 00 00       	mov    esi,0x0
 175:	4c 89 d7             	mov    rdi,r10
 178:	e9 00 00 00 00       	jmp    17d <DecimalToString+0x7d>
 17d:	0f 1f 00             	nop    DWORD PTR [rax]
 180:	c6 06 2d             	mov    BYTE PTR [rsi],0x2d
 183:	f7 df                	neg    edi
 185:	41 b8 01 00 00 00    	mov    r8d,0x1
 18b:	eb 8d                	jmp    11a <DecimalToString+0x1a>
 18d:	0f 1f 00             	nop    DWORD PTR [rax]
 190:	49 8d 7a 01          	lea    rdi,[r10+0x1]
 194:	e9 00 00 00 00       	jmp    199 <DecimalToString+0x99>
 199:	be 00 00 00 00       	mov    esi,0x0
 19e:	4c 89 d7             	mov    rdi,r10
 1a1:	e9 00 00 00 00       	jmp    1a6 <DecimalToString+0xa6>
 1a6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 1ad:	00 00 00 

00000000000001b0 <HexaToString>:
 1b0:	45 31 c0             	xor    r8d,r8d
 1b3:	85 ff                	test   edi,edi
 1b5:	49 89 f1             	mov    r9,rsi
 1b8:	89 f8                	mov    eax,edi
 1ba:	48 89 f2             	mov    rdx,rsi
 1bd:	75 1d                	jne    1dc <HexaToString+0x2c>
 1bf:	eb 4f                	jmp    210 <HexaToString+0x60>
 1c1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
 1c8:	83 c1 30             	add    ecx,0x30
 1cb:	c1 e8 04             	shr    eax,0x4
 1ce:	41 83 c0 01          	add    r8d,0x1
 1d2:	88 0a                	mov    BYTE PTR [rdx],cl
 1d4:	48 83 c2 01          	add    rdx,0x1
 1d8:	85 c0                	test   eax,eax
 1da:	74 1e                	je     1fa <HexaToString+0x4a>
 1dc:	89 c1                	mov    ecx,eax
 1de:	83 e1 0f             	and    ecx,0xf
 1e1:	83 f9 09             	cmp    ecx,0x9
 1e4:	76 e2                	jbe    1c8 <HexaToString+0x18>
 1e6:	83 c1 57             	add    ecx,0x57
 1e9:	c1 e8 04             	shr    eax,0x4
 1ec:	41 83 c0 01          	add    r8d,0x1
 1f0:	88 0a                	mov    BYTE PTR [rdx],cl
 1f2:	48 83 c2 01          	add    rdx,0x1
 1f6:	85 c0                	test   eax,eax
 1f8:	75 e2                	jne    1dc <HexaToString+0x2c>
 1fa:	4d 63 c0             	movsxd r8,r8d
 1fd:	43 c6 04 01 00       	mov    BYTE PTR [r9+r8*1],0x0
 202:	41 80 39 2d          	cmp    BYTE PTR [r9],0x2d
 206:	74 18                	je     220 <HexaToString+0x70>
 208:	4c 89 cf             	mov    rdi,r9
 20b:	e9 00 00 00 00       	jmp    210 <HexaToString+0x60>
 210:	be 00 00 00 00       	mov    esi,0x0
 215:	4c 89 cf             	mov    rdi,r9
 218:	e9 00 00 00 00       	jmp    21d <HexaToString+0x6d>
 21d:	0f 1f 00             	nop    DWORD PTR [rax]
 220:	49 8d 79 01          	lea    rdi,[r9+0x1]
 224:	e9 00 00 00 00       	jmp    229 <HexaToString+0x79>

Disassembly of section .rodata.str1.1:

0000000000000000 <.rodata.str1.1>:
   0:	30 00                	xor    BYTE PTR [rax],al
   2:	2d 32 31 34 37       	sub    eax,0x37343132
   7:	34 38                	xor    al,0x38
   9:	33 36                	xor    esi,DWORD PTR [rsi]
   b:	34 38                	xor    al,0x38
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	00 47 43             	add    BYTE PTR [rdi+0x43],al
   3:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   6:	28 47 4e             	sub    BYTE PTR [rdi+0x4e],al
   9:	55                   	push   rbp
   a:	29 20                	sub    DWORD PTR [rax],esp
   c:	34 2e                	xor    al,0x2e
   e:	37                   	(bad)  
   f:	2e 33 00             	xor    eax,DWORD PTR cs:[rax]

Disassembly of section .eh_frame:

0000000000000000 <.eh_frame>:
   0:	14 00                	adc    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	00 00                	add    BYTE PTR [rax],al
   6:	00 00                	add    BYTE PTR [rax],al
   8:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
   b:	00 01                	add    BYTE PTR [rcx],al
   d:	78 10                	js     1f <.eh_frame+0x1f>
   f:	01 1b                	add    DWORD PTR [rbx],ebx
  11:	0c 07                	or     al,0x7
  13:	08 90 01 00 00 10    	or     BYTE PTR [rax+0x10000001],dl
  19:	00 00                	add    BYTE PTR [rax],al
  1b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  1e:	00 00                	add    BYTE PTR [rax],al
  20:	00 00                	add    BYTE PTR [rax],al
  22:	00 00                	add    BYTE PTR [rax],al
  24:	f5                   	cmc    
  25:	00 00                	add    BYTE PTR [rax],al
  27:	00 00                	add    BYTE PTR [rax],al
  29:	00 00                	add    BYTE PTR [rax],al
  2b:	00 10                	add    BYTE PTR [rax],dl
  2d:	00 00                	add    BYTE PTR [rax],al
  2f:	00 30                	add    BYTE PTR [rax],dh
  31:	00 00                	add    BYTE PTR [rax],al
  33:	00 00                	add    BYTE PTR [rax],al
  35:	00 00                	add    BYTE PTR [rax],al
  37:	00 a6 00 00 00 00    	add    BYTE PTR [rsi+0x0],ah
  3d:	00 00                	add    BYTE PTR [rax],al
  3f:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  42:	00 00                	add    BYTE PTR [rax],al
  44:	44 00 00             	add    BYTE PTR [rax],r8b
  47:	00 00                	add    BYTE PTR [rax],al
  49:	00 00                	add    BYTE PTR [rax],al
  4b:	00 79 00             	add    BYTE PTR [rcx+0x0],bh
	...
